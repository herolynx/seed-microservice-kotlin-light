buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-noarg:1.1.4-2'
        classpath 'org.jetbrains.kotlin:kotlin-allopen:1.1.4-2'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.4-2'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.9"
    }
}

apply {
    plugin("kotlin")
    plugin("java")
    plugin("application")
    plugin("docker")
    plugin("groovy")
    plugin("idea")
}

apply from: 'gradle/querydsl.gradle'

applicationName = "seed-microservice-light"
mainClassName = "com.herolynx.service.Application"
version = "0.0.1"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    //kotlin & FP
    compile("org.jetbrains.kotlin:kotlin-stdlib")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.funktionale:funktionale-all:1.1")

    //monitoring
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    //web service & REST
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1'

    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.7.v20170914'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.7.v20170914'

    compile group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '2.26'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.26'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.26'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.26'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: '2.26'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.26'
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.26'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.2'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.2'

    //DevOps
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'

    //data access

    //tests
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.11.0'
    testCompile("com.h2database:h2:1.4.196")

    //spock for BDD
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testCompile 'org.objenesis:objenesis:2.6'
    testCompile 'cglib:cglib-nodep:3.2.4'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
}

jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes("Main-Class": "com.herolynx.service.Application")
    }
}

docker {
    baseImage "openjdk:8-jre-alpine"
    maintainer 'Michal Wronski "michal.robert.wronski@gmail.com"'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "$targetCompatibility"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "$targetCompatibility"
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}
